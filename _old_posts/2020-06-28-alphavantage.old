<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2020-06-28 Sun 20:48 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Alphavantage &#x2014; A nice surprise</title>
<meta name="generator" content="Org mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">Alphavantage &#x2014; A nice surprise</h1>
<p>
I just found out on a <a href="https://www.reddit.com/r/investimentos/comments/hhgqhk/comoonde_comprar_dataopen_high_low_close_volume/">reddit thread</a> about this website that has an API that includes the brazillian stock market, including intra-day data. I know that there are many sources of stock market data for the brazillian stock market around such as Interactive Broker, but they are usually a pain in the ass to get an account and gets this rolling. Additionally we are allowed up to 500 API calls per day for free, and generally this enough for any small investor. In this file I want to see how easy is to implement this API and gather some info for Brazilian stocks.
</p>

<div id="outline-container-org9b3a3e6" class="outline-2">
<h2 id="org9b3a3e6"><span class="section-number-2">1</span> What is Alphavantage</h2>
<div class="outline-text-2" id="text-1">
<p>
As I said before, I just found out about this <a href="https://www.alphavantage.co/">website</a>. That being said is was a quite a pleasant surprise to know that they are backed by the <a href="https://www.ycombinator.com/">Y Combinator</a> startup accelerator, that was a good sign. I took a rather fast look at their <a href="https://www.alphavantage.co/documentation/">documentation</a> and could see that it is pretty straight forward to get data from their API. They provide data in <b>json</b> and <b>csv</b> data, therefore you can get data from any modern language library (Python, R, etc&#x2026;) or get it directly in your spreadsheet in Google Sheet, Microsoft Excel and so on. We are going to need a key for this and Alphavantage make this very easily as well, just go to their <a href="https://www.alphavantage.co/support/#api-key">website and claim the key</a>.
</p>
</div>
</div>

<div id="outline-container-org49c911d" class="outline-2">
<h2 id="org49c911d"><span class="section-number-2">2</span> The API</h2>
<div class="outline-text-2" id="text-2">
<p>
Here I am going to take the first route and use Python to get the data. Python has many json libraries that make the work here a nobrainer, nonetheless I am going to demonstrate how I goes step-by-step. For the purporse of this demo, we are going to use the function <b>TIME<sub>SERIES</sub><sub>INTRADAY</sub></b>, gather data for the Banco do Brasil tick (<b>BBAS3.SA</b>) in the BOVESPA stock market in intervals of <b>5 minutes</b>. This function accepets more arguments that I just mentioned, for completeness we are going to use the following parameters:
</p>

<ul class="org-ul">
<li>function: 'TIME<sub>SERIES</sub><sub>INTRADAY</sub>'</li>
<li>symbol: 'BBAS3.SA'</li>
<li>interval: '5min'</li>
<li>outputsize: 'compact'</li>
<li>datatype: 'json'</li>
<li>apikey: 'my<sub>secret</sub><sub>key</sub>'</li>
</ul>

<p>
Note that any tick from the brazillian stock market is found by adding a '.SA' to the end of it.
</p>
</div>
</div>

<div id="outline-container-orgf7aaa60" class="outline-2">
<h2 id="orgf7aaa60"><span class="section-number-2">3</span> The examples</h2>
<div class="outline-text-2" id="text-3">
<p>
We are going to use the <b>requests</b> in Python to get the data, parse it in json and print the data in a spreadsheet fashion. First we have the demo that Alphaventure provides in their website.
</p>

<div class="org-src-container">
<pre class="src src-python" id="org1947581"><span class="org-keyword">import</span> requests
<span class="org-variable-name">r</span> = requests.get(url=<span class="org-string">'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&amp;symbol=IBM&amp;interval=5min&amp;apikey=demo'</span>)
<span class="org-variable-name">timeseries</span> = r.json()[<span class="org-string">'Time Series (5min)'</span>]
<span class="org-keyword">print</span>(<span class="org-string">"Date Open High Low Close Volume"</span>)
<span class="org-keyword">for</span> interval <span class="org-keyword">in</span> timeseries:
  <span class="org-keyword">print</span>(interval, *[timeseries[interval][_] <span class="org-keyword">for</span> _ <span class="org-keyword">in</span> timeseries[interval]])
</pre>
</div>

<pre class="example">
Date Open High Low Close Volume
2020-06-26 16:00:00 117.4100 117.6900 117.0700 117.2600 435375
2020-06-26 15:55:00 117.0900 117.4100 116.7500 117.4100 187442
2020-06-26 15:50:00 117.2500 117.3900 116.9550 117.0800 87094
2020-06-26 15:45:00 116.6800 117.3000 116.5800 117.3000 75604
2020-06-26 15:40:00 116.6200 116.7800 116.5200 116.6950 61955
2020-06-26 15:35:00 116.8800 116.8800 116.5600 116.6000 61874
2020-06-26 15:30:00 116.5900 116.9800 116.5000 116.8700 64503
2020-06-26 15:25:00 116.7600 116.8300 116.5900 116.5900 54207
2020-06-26 15:20:00 117.0300 117.1100 116.7200 116.7400 36275
2020-06-26 15:15:00 116.9300 117.0700 116.8100 117.0400 32244
2020-06-26 15:10:00 116.9500 117.0100 116.7100 116.9250 29362
2020-06-26 15:05:00 116.9600 117.1926 116.9500 116.9500 32810
2020-06-26 15:00:00 116.9400 116.9500 116.8001 116.9300 19074
2020-06-26 14:55:00 116.8400 117.0360 116.8400 116.9600 20598
2020-06-26 14:50:00 117.0100 117.0400 116.7300 116.8700 30964
2020-06-26 14:45:00 116.9800 117.1700 116.9700 117.0100 21233
2020-06-26 14:40:00 117.0700 117.0800 116.9300 116.9550 38137
2020-06-26 14:35:00 117.0200 117.2000 116.9000 117.0850 36584
2020-06-26 14:30:00 117.2500 117.2700 116.9400 117.0600 43397
2020-06-26 14:25:00 117.2000 117.3600 117.1350 117.2377 19504
2020-06-26 14:20:00 117.2200 117.3300 117.1950 117.1950 20864
2020-06-26 14:15:00 117.3000 117.4300 117.2000 117.2300 21059
2020-06-26 14:10:00 117.2600 117.3100 117.1900 117.2700 18485
2020-06-26 14:05:00 117.3700 117.3700 117.1300 117.2500 22593
2020-06-26 14:00:00 117.4100 117.4250 117.2900 117.4200 11535
2020-06-26 13:55:00 117.4300 117.4500 117.3100 117.3600 12425
2020-06-26 13:50:00 117.3300 117.4200 117.2348 117.4000 14399
2020-06-26 13:45:00 117.4100 117.4300 117.2900 117.3200 14127
2020-06-26 13:40:00 117.4000 117.5300 117.2100 117.4000 22976
2020-06-26 13:35:00 117.3300 117.4100 117.2200 117.3800 13679
2020-06-26 13:30:00 117.3000 117.3600 117.2100 117.3200 17407
2020-06-26 13:25:00 117.2500 117.4382 117.1500 117.3400 20187
2020-06-26 13:20:00 117.1400 117.2200 117.1200 117.2000 13067
2020-06-26 13:15:00 117.2800 117.3000 117.1000 117.1300 15349
2020-06-26 13:10:00 117.1600 117.3900 117.1600 117.2900 10638
2020-06-26 13:05:00 117.1600 117.4000 117.0800 117.1900 20112
2020-06-26 13:00:00 117.0900 117.2100 117.0000 117.2100 13711
2020-06-26 12:55:00 117.0400 117.1200 116.9000 117.0800 20188
2020-06-26 12:50:00 117.0132 117.2050 116.8949 117.0400 21952
2020-06-26 12:45:00 117.1800 117.1800 117.0000 117.0700 16269
2020-06-26 12:40:00 117.0400 117.2000 116.9200 117.1545 25968
2020-06-26 12:35:00 117.0350 117.1000 116.8900 117.0600 25147
2020-06-26 12:30:00 116.7900 117.1300 116.7500 117.0401 33971
2020-06-26 12:25:00 116.4450 116.9400 116.2600 116.8100 71451
2020-06-26 12:20:00 116.7300 116.7800 116.4300 116.4300 32615
2020-06-26 12:15:00 116.7750 116.8900 116.6900 116.7150 27339
2020-06-26 12:10:00 116.9400 116.9500 116.7400 116.8000 24061
2020-06-26 12:05:00 116.8700 116.8952 116.7300 116.8952 15584
2020-06-26 12:00:00 116.6000 116.9600 116.6000 116.8502 21777
2020-06-26 11:55:00 116.7250 116.7599 116.5700 116.5800 18915
2020-06-26 11:50:00 116.5900 116.7145 116.4800 116.7145 22052
2020-06-26 11:45:00 116.6100 116.6300 116.4700 116.5700 18824
2020-06-26 11:40:00 116.4800 116.7950 116.4200 116.6799 22479
2020-06-26 11:35:00 116.4100 116.4800 116.2650 116.4500 25823
2020-06-26 11:30:00 116.6900 116.6900 116.3000 116.4000 40527
2020-06-26 11:25:00 116.6200 116.7700 116.4200 116.7000 45606
2020-06-26 11:20:00 116.8700 116.8700 116.5900 116.5900 40304
2020-06-26 11:15:00 116.9500 116.9900 116.8000 116.8900 31549
2020-06-26 11:10:00 117.1300 117.3500 116.9100 116.9600 48308
2020-06-26 11:05:00 116.9600 117.2300 116.9001 117.1508 27123
2020-06-26 11:00:00 116.8300 117.0500 116.7100 116.8900 30997
2020-06-26 10:55:00 116.9000 117.1000 116.6400 116.8600 39111
2020-06-26 10:50:00 117.1000 117.2000 116.8800 116.8800 24209
2020-06-26 10:45:00 116.8900 117.1700 116.8100 117.1300 29218
2020-06-26 10:40:00 116.8900 117.0400 116.8100 116.9300 25095
2020-06-26 10:35:00 117.0700 117.2800 116.7800 116.8700 55655
2020-06-26 10:30:00 117.0113 117.1900 116.8000 117.0987 29965
2020-06-26 10:25:00 117.1800 117.2100 116.8600 117.0000 36565
2020-06-26 10:20:00 117.3900 117.3900 117.0200 117.1600 30425
2020-06-26 10:15:00 117.5400 117.5400 117.2600 117.3900 31416
2020-06-26 10:10:00 117.5700 117.8750 117.5300 117.5500 27873
2020-06-26 10:05:00 117.9350 118.0700 117.5200 117.5400 44058
2020-06-26 10:00:00 118.2600 118.3300 117.8600 117.9700 33733
2020-06-26 09:55:00 118.2400 118.2800 117.9681 118.2800 27728
2020-06-26 09:50:00 118.0100 118.2920 117.9214 118.2500 27377
2020-06-26 09:45:00 118.5800 118.5800 118.0300 118.0300 24392
2020-06-26 09:40:00 118.3550 118.6700 118.0400 118.4100 32317
2020-06-26 09:35:00 118.2600 118.9900 117.9400 118.3100 113647
2020-06-25 16:00:00 118.9900 119.2100 118.7200 119.1800 221583
2020-06-25 15:55:00 118.2200 119.0000 118.2200 119.0000 118740
2020-06-25 15:50:00 118.4900 118.5950 118.2100 118.3000 59603
2020-06-25 15:45:00 118.4000 118.4901 118.3400 118.4858 52101
2020-06-25 15:40:00 118.7500 118.7500 118.3100 118.3900 49883
2020-06-25 15:35:00 118.6500 118.8800 118.4300 118.7500 52580
2020-06-25 15:30:00 118.6000 118.8100 118.5950 118.6750 44317
2020-06-25 15:25:00 118.3800 118.6958 118.3700 118.6410 45363
2020-06-25 15:20:00 118.1500 118.4000 118.1500 118.3933 37771
2020-06-25 15:15:00 118.1100 118.2200 118.0100 118.1500 29756
2020-06-25 15:10:00 117.6400 118.1500 117.6300 118.1100 56003
2020-06-25 15:05:00 117.2100 117.6263 117.1100 117.6250 50259
2020-06-25 15:00:00 117.2200 117.3300 117.1400 117.2400 37561
2020-06-25 14:55:00 117.1799 117.3150 117.1000 117.2150 38749
2020-06-25 14:50:00 117.4300 117.4300 117.1750 117.1750 29108
2020-06-25 14:45:00 117.2600 117.4300 117.2350 117.4300 16257
2020-06-25 14:40:00 117.2300 117.3000 117.0900 117.2600 24491
2020-06-25 14:35:00 117.4300 117.4300 117.2100 117.2400 32948
2020-06-25 14:30:00 117.3600 117.4300 117.1600 117.4142 35053
2020-06-25 14:25:00 117.4500 117.4700 117.2300 117.3000 25958
2020-06-25 14:20:00 117.2900 117.5000 117.2900 117.4590 25131
2020-06-25 14:15:00 117.3300 117.3900 117.2390 117.2800 22281
</pre>

<p>
As we can see this everything occurred just fine an this is a nice demonstration of the demo functionality of the API. We acquired OHLCV data for the IBM in intervals of 5 minutes, it seems that the outputsize= <b>compact</b> options is set by default, that why we only have data from last friday (26) and the day before that. Notice that the documentation says that the <b>full</b> option provides enough data for 20 years.  Now let us try with some real data.
</p>

<div class="org-src-container">
<pre class="src src-python" id="org867b57f"><span class="org-keyword">import</span> requests
<span class="org-variable-name">function</span>=<span class="org-string">'TIME_SERIES_INTRADAY'</span>
<span class="org-variable-name">symbol</span>=<span class="org-string">'BBAS3.SA'</span>
<span class="org-variable-name">interval</span>=<span class="org-string">'5min'</span>
<span class="org-variable-name">outputsize</span>=<span class="org-string">'compact'</span>
<span class="org-variable-name">datatype</span>=<span class="org-string">'json'</span>
<span class="org-variable-name">apikey</span>=my_secret_key
<span class="org-variable-name">r</span> = requests.get(url=f<span class="org-string">'https://www.alphavantage.co/query?function={function}&amp;symbol={symbol}&amp;interval={interval}&amp;datatype={datatype}&amp;apikey={apikey}'</span>)
<span class="org-variable-name">timeseries</span> = r.json()[<span class="org-string">'Time Series (5min)'</span>]
<span class="org-keyword">print</span>(<span class="org-string">"Data Open High Low Close Volume"</span>)
<span class="org-keyword">for</span> interval <span class="org-keyword">in</span> timeseries:
  <span class="org-keyword">print</span>(interval, *[timeseries[interval][_] <span class="org-keyword">for</span> _ <span class="org-keyword">in</span> timeseries[interval]])
</pre>
</div>

<pre class="example">
Data Open High Low Close Volume
2020-06-26 15:50:00 31.8900 31.9400 31.8600 31.9200 186830
2020-06-26 15:45:00 31.8900 31.9300 31.8700 31.8800 289680
2020-06-26 15:40:00 31.8900 31.9000 31.8200 31.8900 306510
2020-06-26 15:35:00 31.9200 31.9500 31.8700 31.8800 311865
2020-06-26 15:30:00 31.9700 31.9800 31.9000 31.9200 232900
2020-06-26 15:25:00 31.9600 31.9900 31.9300 31.9700 98770
2020-06-26 15:20:00 31.9700 32.0500 31.9100 31.9600 188785
2020-06-26 15:15:00 31.9700 31.9900 31.8800 31.9700 196180
2020-06-26 15:10:00 31.9000 31.9900 31.8800 31.9800 128775
2020-06-26 15:05:00 31.9700 31.9700 31.8800 31.9000 370600
2020-06-26 15:00:00 31.9900 32.0200 31.9500 31.9500 96135
2020-06-26 14:55:00 31.9500 32.0200 31.9300 31.9900 122910
2020-06-26 14:50:00 31.9500 32.0200 31.9500 31.9600 102680
2020-06-26 14:45:00 31.9700 31.9700 31.9300 31.9500 286450
2020-06-26 14:40:00 32.0000 32.0200 31.9200 31.9600 257635
2020-06-26 14:35:00 32.0300 32.0400 32.0000 32.0000 282625
2020-06-26 14:30:00 32.0500 32.0500 32.0100 32.0300 40545
2020-06-26 14:25:00 32.0900 32.1000 32.0200 32.0500 163710
2020-06-26 14:20:00 32.1000 32.1300 32.0800 32.1000 56780
2020-06-26 14:15:00 32.0700 32.1200 32.0600 32.1000 89420
2020-06-26 14:10:00 32.0200 32.1000 32.0200 32.0700 108375
2020-06-26 14:05:00 32.0300 32.0500 32.0100 32.0200 63580
2020-06-26 14:00:00 32.0400 32.0900 32.0300 32.0400 105910
2020-06-26 13:55:00 32.1000 32.1000 32.0400 32.0400 45815
2020-06-26 13:50:00 32.0900 32.1000 32.0500 32.0800 44880
2020-06-26 13:45:00 32.0300 32.1200 32.0200 32.0800 106845
2020-06-26 13:40:00 32.1100 32.1200 32.0300 32.0300 193800
2020-06-26 13:35:00 32.1300 32.1600 32.1000 32.1200 92905
2020-06-26 13:30:00 32.1200 32.1300 32.1000 32.1300 111180
2020-06-26 13:25:00 32.1300 32.1500 32.1000 32.1200 36550
2020-06-26 13:20:00 32.1400 32.1700 32.1200 32.1300 27710
2020-06-26 13:15:00 32.1300 32.1600 32.1000 32.1500 56270
2020-06-26 13:10:00 32.1700 32.1900 32.1300 32.1300 50320
2020-06-26 13:05:00 32.1800 32.2000 32.1700 32.1800 50830
2020-06-26 13:00:00 32.1900 32.2000 32.1600 32.1700 63750
2020-06-26 12:55:00 32.1600 32.2000 32.1600 32.1800 109055
2020-06-26 12:50:00 32.1500 32.1900 32.1200 32.1700 56525
2020-06-26 12:45:00 32.1100 32.1500 32.0900 32.1300 44965
2020-06-26 12:40:00 32.1500 32.1600 32.0900 32.1100 33830
2020-06-26 12:35:00 32.1000 32.1600 32.0800 32.1500 99280
2020-06-26 12:30:00 32.1300 32.1400 32.1000 32.1100 76075
2020-06-26 12:25:00 32.1200 32.1600 32.1200 32.1400 35530
2020-06-26 12:20:00 32.1300 32.1500 32.0700 32.1300 95710
2020-06-26 12:15:00 32.1600 32.1700 32.1200 32.1400 47685
2020-06-26 12:10:00 32.0900 32.1900 32.0800 32.1500 89590
2020-06-26 12:05:00 32.1500 32.1500 32.0500 32.0900 201705
2020-06-26 12:00:00 32.1600 32.1900 32.1400 32.1400 106165
2020-06-26 11:55:00 32.1700 32.2000 32.1600 32.1600 148240
2020-06-26 11:50:00 32.1800 32.2000 32.1700 32.1800 10115
2020-06-26 11:45:00 32.1700 32.1800 32.1200 32.1800 65705
2020-06-26 11:40:00 32.1500 32.2000 32.1500 32.1700 58650
2020-06-26 11:35:00 32.1500 32.1900 32.1100 32.1600 73185
2020-06-26 11:30:00 32.1700 32.2000 32.1000 32.1500 135575
2020-06-26 11:25:00 32.1200 32.2200 32.1100 32.1700 121380
2020-06-26 11:20:00 32.2800 32.3300 32.1300 32.1300 416585
2020-06-26 11:15:00 32.4100 32.4100 32.2800 32.2800 113900
2020-06-26 11:10:00 32.4400 32.4500 32.3700 32.4300 43945
2020-06-26 11:05:00 32.3800 32.5000 32.3500 32.4400 121465
2020-06-26 11:00:00 32.3000 32.4200 32.2900 32.3700 142290
2020-06-26 10:55:00 32.2800 32.3000 32.2600 32.2900 191505
2020-06-26 10:50:00 32.2900 32.3400 32.2500 32.2700 90185
2020-06-26 10:45:00 32.3300 32.3800 32.2800 32.2900 60095
2020-06-26 10:40:00 32.2900 32.3400 32.2200 32.3300 116365
2020-06-26 10:35:00 32.3100 32.3700 32.2500 32.2900 69190
2020-06-26 10:30:00 32.3200 32.4300 32.2600 32.3000 150535
2020-06-26 10:25:00 32.2600 32.3500 32.2200 32.3300 158610
2020-06-26 10:20:00 32.3000 32.3300 32.2000 32.2400 193885
2020-06-26 10:15:00 32.3200 32.3700 32.2600 32.2900 101150
2020-06-26 10:10:00 32.3500 32.3800 32.2200 32.3100 178670
2020-06-26 10:05:00 32.3100 32.4000 32.2700 32.3500 126140
2020-06-26 10:00:00 32.4400 32.4800 32.3000 32.3100 153510
2020-06-26 09:55:00 32.3600 32.4800 32.2900 32.4600 133280
2020-06-26 09:50:00 32.3200 32.4000 32.2800 32.3500 265285
2020-06-26 09:45:00 32.2600 32.4000 32.2500 32.3200 166515
2020-06-26 09:40:00 32.5700 32.5700 32.2400 32.2600 267920
2020-06-26 09:35:00 32.4600 32.6300 32.4600 32.5500 169065
2020-06-26 09:30:00 32.4700 32.5500 32.3600 32.4000 226015
2020-06-26 09:25:00 32.7100 32.7100 32.4300 32.4800 205700
2020-06-26 09:20:00 32.6300 32.7200 32.5300 32.7100 145350
2020-06-26 09:15:00 32.7500 32.7500 32.6100 32.6200 168215
2020-06-26 09:10:00 32.6900 32.8800 32.5700 32.7400 301410
2020-06-26 09:05:00 32.6500 32.7400 32.6000 32.6800 0
2020-06-25 15:50:00 32.8800 33.0000 32.8700 33.0000 202385
2020-06-25 15:45:00 32.9000 32.9500 32.8400 32.8800 158270
2020-06-25 15:40:00 32.9000 32.9500 32.8800 32.9000 154190
2020-06-25 15:35:00 32.9900 33.0100 32.8900 32.9100 179010
2020-06-25 15:30:00 32.9200 33.0500 32.8400 33.0000 277015
2020-06-25 15:25:00 32.9600 33.0300 32.9000 32.9300 244035
2020-06-25 15:20:00 32.8500 32.9700 32.8400 32.9600 649655
2020-06-25 15:15:00 32.8000 32.9100 32.8000 32.8500 325295
2020-06-25 15:10:00 32.7500 32.8000 32.7100 32.8000 240295
2020-06-25 15:05:00 32.5500 32.7600 32.5500 32.7400 326315
2020-06-25 15:00:00 32.5300 32.5900 32.4600 32.5600 202130
2020-06-25 14:55:00 32.5700 32.5700 32.4800 32.5300 188275
2020-06-25 14:50:00 32.3600 32.5700 32.3600 32.5700 310505
2020-06-25 14:45:00 32.3700 32.4000 32.3400 32.3700 77860
2020-06-25 14:40:00 32.3000 32.4000 32.3000 32.3700 103955
2020-06-25 14:35:00 32.3000 32.3200 32.2100 32.3000 109650
2020-06-25 14:30:00 32.2700 32.3300 32.2600 32.3100 58395
2020-06-25 14:25:00 32.2400 32.3100 32.2400 32.2800 130220
</pre>

<p>
I have omitted my key for obvious reasons. We can see then we get the intra-day data from the BBAS3 tick easy as a couple of lines of code. If we wanted we could use pandas and matplotlib to create a minimal framework to analyze this data, create signals and so on. 
</p>

<p>
Make sure to check their documentation out, there are a lot of function such for daily, weekly and monthly data as well as forex and custom signals. This was a nice surprise and I hope this article and the examples help folks from Brazil to gather data from stock market.
</p>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Created: 2020-06-28 Sun 20:48</p>
<p class="validation"><a href="http://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
